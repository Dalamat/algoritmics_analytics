
from sqlalchemy import Column, Integer, String, Text, Float
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()

class Event(Base):
    __tablename__ = 'events'
    
    next_lesson_time = Column(Text)
    next_lesson_number = Column(Text)
    next_lesson = Column(Text)
    id = Column(Text, primary_key=True)
    name = Column(Text)
    venue = Column(Text)
    geography = Column(Text)
    lesson_status = Column(Text)
    participants = Column(Text)
    attended_students = Column(Integer)
    paid_students = Column(Text)
    enrolled_students = Column(Integer)
    expelled_students = Column(Integer)
    amc_paid_after_master = Column(Integer)
    expelled_and_transferred = Column(Integer)
    first_lesson = Column(Text)
    day = Column(Text)
    teacher = Column(Text)
    curator = Column(Text)
    tutor = Column(Text)
    client_manager = Column(Text)
    priority = Column(Text)
    group_type = Column(Text)
    status = Column(Text)
    course = Column(Text)
    course_type = Column(Text)
    availability = Column(Text)
    created = Column(Text)
    created_by = Column(Text)

class Group(Base):
    __tablename__ = 'groups'

    id = Column(String, primary_key=True, nullable=True)
    name = Column(String, nullable=True)
    platform = Column(String, nullable=True)
    geography = Column(String, nullable=True)
    participants = Column(String, nullable=True)
    paid = Column(String, nullable=True)
    enrolled = Column(Integer, nullable=True)
    dismissed = Column(Integer, nullable=True)
    amc_students_paid_after_master = Column(Integer, nullable=True)
    dismissed_transferred = Column(Integer, nullable=True)
    first_lesson = Column(String, nullable=True)
    next_lesson_time = Column(String, nullable=True)
    next_lesson_number = Column(String, nullable=True)
    next_lesson = Column(String, nullable=True)
    teacher = Column(String, nullable=True)
    curator = Column(String, nullable=True)
    tutor = Column(String, nullable=True)
    client_manager = Column(String, nullable=True)
    priority = Column(String, nullable=True)
    group_type = Column(String, nullable=True)
    status = Column(String, nullable=True)
    course = Column(String, nullable=True)
    course_type = Column(String, nullable=True)
    availability = Column(String, nullable=True)
    format = Column(String, nullable=True)
    created = Column(String, nullable=True)
    created_by = Column(String, nullable=True)

class Invoice(Base):
    __tablename__ = 'invoices'
    id = Column(Integer, primary_key=True)
    invoice_creation_date = Column(Text)
    invoice_amount = Column(Text)
    lessons_to_pay = Column(Integer)
    validity_period = Column(Text)
    student_id = Column(Integer)
    student = Column(Text)
    payment_type = Column(Text)
    invoice_source = Column(Text)
    invoice_status = Column(Text)
    contract_number = Column(Text)
    invoice_created = Column(Text)
    responsible = Column(Text)
    fo_comment = Column(Text)
    office = Column(Text)
    payment_id = Column(Text)
    payment_method = Column(Text)
    payment_status = Column(Text)
    payment_received = Column(Text)
    payment_creation_date = Column(Text)
    payment_created_by_hour = Column(Text)
    payment_update_date = Column(Text)
    payment_updated_by_hour = Column(Text)
    payment_changed = Column(Text)
    group_type = Column(Text)
    group_status = Column(Text)
    course = Column(Text)
    course_type = Column(Text)

class Student(Base):
    __tablename__ = 'students'
    id = Column(Integer, primary_key=True)
    name = Column(Text)
    login = Column(Text)
    password = Column(Text)
    age = Column(Text)
    birthdate = Column(Text)
    parent_name = Column(Text)
    parent_phone = Column(Text)
    email = Column(Text)
    created = Column(Text)
    created_by = Column(Text)
    updated = Column(Text)
    geography = Column(Text)
    sales = Column(Text)
    group_id = Column(Text)
    group_name = Column(Text)
    description = Column(Text)
    enrolled_in_group = Column(Text)
    teacher = Column(Text)
    total_group_lessons = Column(Text)
    curator = Column(Text)
    tutor = Column(Text)
    client_manager = Column(Text)
    lessons_completed = Column(Text)
    group_start = Column(Text)
    group_type = Column(Text)
    group_status = Column(Text)
    student_status = Column(Text)
    lessons_attended = Column(Text, default=0)
    lessons_missed = Column(Text)
    lessons_missed_consecutive = Column(Text)
    attendance = Column(Text)
    total_invoiced = Column(Float)
    paid = Column(Float)
    lessons_paid = Column(Integer)
    balance = Column(Text)
    amo_pipeline = Column(Text)
    deal_status = Column(Text)
    expelled = Column(Text)
    expulsion_reasons = Column(Text)
    office = Column(Text)
    course = Column(Text)
    course_type = Column(Text)
    skype = Column(Text)
    remote = Column(Text)
    system = Column(Text)